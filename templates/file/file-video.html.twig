{#
/**
* @file
* Default theme implementation to display the file entity as a video tag.
*
* Available variables:
* - attributes: An array of HTML attributes, intended to be added to the
*   video tag.
* - files: And array of files to be added as sources for the video tag. Each
*   element is an array with the following elements:
*   - file: The full file object.
*   - source_attributes: An array of HTML attributes for to be added to the
*     source tag.
*
* @ingroup themeable
*/
#}
<script>
   var videoElement;
   var timeout;



   function redirectToPage()

{      window.location.href = "../../";    }


   function checkVideoStatus() {
     if (videoElement.ended || videoElement.paused)

{ redirectToPage();      }
else

{ timeout = setTimeout(checkVideoStatus, 6000);      }
   }



   window.onload = function() {
     videoElement = document.getElementsByTagName('video')[0];
     videoElement.addEventListener("ended", redirectToPage);
     videoElement.addEventListener("pause", function()

{      timeout = setTimeout(checkVideoStatus, 6000);    }
);
   };
</script>

<video {{ attributes }} disablepictureinpicture controlslist="nodownload noplaybackrate nofullscreen" {{ autoplay }}>
  {% for file in files %}
    <source {{ file.source_attributes }} />
  {% endfor %}
</video>
